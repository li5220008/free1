[ INFO] [2013-06-20 09:46:58]  [play.Logger] -Starting D:\www\iQuant\manage
[ INFO] [2013-06-20 09:46:58]  [play.Logger] -Module common is available (D:\www\iQuant\manage\..\common)
[ INFO] [2013-06-20 09:46:58]  [play.Logger] -Module excel is available (D:\www\iQuant\manage\modules\excel-1.2.3)
[ INFO] [2013-06-20 09:46:58]  [play.Logger] -Module qicdoc is available (D:\www\iQuant\manage\..\qicdoc)
[ INFO] [2013-06-20 09:46:58]  [play.Logger] -Module redis is available (D:\work\playframework\play1\modules\redis-0.3)
[ WARN] [2013-06-20 09:46:59]  [play.Logger] -You're running Play! in DEV mode
[ INFO] [2013-06-20 09:46:59]  [play.Logger] -Listening for HTTP on port 9100 (Waiting a first request to start) ...
[DEBUG] [2013-06-20 09:48:00]  [play.Logger] -ignoring method: public static models.common.StrategyBaseDto$TradeType.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:02]  [play.Logger] -ignoring method: public static models.common.BackTestServerDto$ServerStatusEnum.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:02]  [play.Logger] -ignoring method: public volatile helpers.CheatSheetHelper$2.compare(java.lang.Object,java.lang.Object) (local vars numbers differs : 2 != -1)
[DEBUG] [2013-06-20 09:48:02]  [play.Logger] -ignoring method: public static dto.BackTestServerDto$ServerStatusEnum.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:02]  [play.Logger] -ignoring method: public volatile controllers.ExcelControllerHelper$1.invoke(java.lang.Object) (local vars numbers differs : 1 != -1)
[DEBUG] [2013-06-20 09:48:03]  [play.Logger] -ignoring method: public static dto.UserInfoDto$UserStatus.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:03]  [play.Logger] -ignoring method: public static dto.BackTestServerDto$ServerTypeEnum.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public volatile business.UserInfoBaseService$PrevilegeLocalCache$2.load(java.lang.Object) (local vars numbers differs : 1 != -1)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public volatile business.UserInfoBaseService$PrevilegeLocalCache$1.load(java.lang.Object) (local vars numbers differs : 1 != -1)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public static models.common.StrategyDto$StrategyType.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public static models.common.BackTestServerDto$ServerTypeEnum.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public volatile dbutils.MapRowProcessor$CaseInsensitiveHashMap.put(java.lang.Object,java.lang.Object) (local vars numbers differs : 2 != -1)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public static models.common.StrategyDto$StrategyStatus.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public static models.common.UserInfo$UserStatus.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public volatile controllers.BackTestServers$2.doJobWithResult() (local vars numbers differs : 0 != -1)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public volatile controllers.BackTestServers$1.doJobWithResult() (local vars numbers differs : 0 != -1)
[DEBUG] [2013-06-20 09:48:05]  [play.Logger] -ignoring method: public static models.common.StrategyBaseDto$TradeVariety.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:06]  [play.Logger] -ignoring method: public static models.common.StrategyBaseDto$StrategyStatus.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:07]  [play.Logger] -ignoring method: public volatile util.HighChartDataType$1.serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) (local vars numbers differs : 3 != -1)
[DEBUG] [2013-06-20 09:48:07]  [play.Logger] -ignoring method: static util.JPAHibernateUtil.access$1(org.hibernate.Query,java.lang.String) (local vars numbers differs : 2 != 0)
[DEBUG] [2013-06-20 09:48:07]  [play.Logger] -ignoring method: public volatile business.UserInfoBaseService$PrevilegeRemoteCache$2.load(java.lang.Object) (local vars numbers differs : 1 != -1)
[DEBUG] [2013-06-20 09:48:07]  [play.Logger] -ignoring method: public volatile business.UserInfoBaseService$PrevilegeRemoteCache$1.load(java.lang.Object) (local vars numbers differs : 1 != -1)
[DEBUG] [2013-06-20 09:48:08]  [play.Logger] -ignoring method: public static models.common.StrategyDto$TradeVariety.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[DEBUG] [2013-06-20 09:48:09]  [play.Logger] -ignoring method: public static models.common.StrategyDto$TradeType.valueOf(java.lang.String) (local vars numbers differs : 1 != 0)
[ INFO] [2013-06-20 09:48:09]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -Connected to jdbc:mysql://localhost/qic_db?useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&connectionCollation=utf8_general_ci&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -Connected to jdbc:mysql://localhost/qicore?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW WARNINGS
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -Connected to jdbc:mysql://localhost/qsm?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET NAMES utf8
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:48:10]  [org.hibernate.annotations.common.Version] -HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
[ INFO] [2013-06-20 09:48:10]  [org.hibernate.Version] -HHH000412: Hibernate Core {4.1.3.Final}
[ INFO] [2013-06-20 09:48:10]  [org.hibernate.cfg.Environment] -HHH000206: hibernate.properties not found
[ INFO] [2013-06-20 09:48:10]  [org.hibernate.cfg.Environment] -HHH000021: Bytecode provider name : javassist
[ INFO] [2013-06-20 09:48:11]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 09:48:11]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 09:48:11]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 09:48:11]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 09:48:11]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 09:48:12]  [play.Logger] -Application 'manage' is now started !
[ INFO] [2013-06-20 09:48:12]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:48:13]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:48:18]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 09:48:18]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 09:48:18]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:48:18]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:48:19]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:48:19]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qic_db?useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&connectionCollation=utf8_general_ci&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qicore?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:29]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qsm?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 09:49:29]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 09:49:29]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 09:49:29]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 09:49:29]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 09:49:29]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 09:49:30]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:31]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:32]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in (
                        1,2,3,6,8
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==
    SELECT
        id,
        NAME 'name',
        account AS account,
        pwd 'password',
        phone,
        email email,
        idcard idCard,
        sale_dep saleDept,
        capital_account capitalAccount,
        address,
        post postCode                     
    FROM
        user_info                     
    WHERE
        id=11
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in (
                        1,2,3,6,8
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==
    SELECT
        id,
        NAME 'name',
        account AS account,
        pwd 'password',
        phone,
        email email,
        idcard idCard,
        sale_dep saleDept,
        capital_account capitalAccount,
        address,
        post postCode                     
    FROM
        user_info                     
    WHERE
        id=11
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:33]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:49:34]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 09:49:52]  [play.Logger] -

@6ek900kil
Internal Server Error (500) for request POST /users/login?x-http-method-override=POST

Execution exception (In /app/controllers/Users.java around line 54)
RuntimeException occured : java.util.concurrent.ExecutionException: java.net.ConnectException: Connection refused: no further information to http://localhost:9800/api/loginWithoutCryp?u=wujw&p=123456&mac=123456&pid=2

play.exceptions.JavaExecutionException: java.util.concurrent.ExecutionException: java.net.ConnectException: Connection refused: no further information to http://localhost:9800/api/loginWithoutCryp?u=wujw&p=123456&mac=123456&pid=2
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:237)
	at Invocation.HTTP Request(Play!)
Caused by: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.net.ConnectException: Connection refused: no further information to http://localhost:9800/api/loginWithoutCryp?u=wujw&p=123456&mac=123456&pid=2
	at play.libs.ws.WSAsync$WSAsyncRequest.get(WSAsync.java:215)
	at controllers.Users.login(Users.java:54)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	... 1 more
Caused by: java.util.concurrent.ExecutionException: java.net.ConnectException: Connection refused: no further information to http://localhost:9800/api/loginWithoutCryp?u=wujw&p=123456&mac=123456&pid=2
	at com.ning.http.client.providers.netty.NettyResponseFuture.abort(NettyResponseFuture.java:297)
	at com.ning.http.client.providers.netty.NettyConnectListener.operationComplete(NettyConnectListener.java:104)
	at org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:428)
	at org.jboss.netty.channel.DefaultChannelFuture.notifyListeners(DefaultChannelFuture.java:419)
	at org.jboss.netty.channel.DefaultChannelFuture.setFailure(DefaultChannelFuture.java:381)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:400)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:312)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.net.ConnectException: Connection refused: no further information to http://localhost:9800/api/loginWithoutCryp?u=wujw&p=123456&mac=123456&pid=2
	at com.ning.http.client.providers.netty.NettyConnectListener.operationComplete(NettyConnectListener.java:100)
	... 10 more
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:574)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:440)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:396)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:312)
	... 3 more
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 09:51:45]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 09:51:45]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 09:51:45]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 09:51:45]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 09:51:45]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:51:45]  [play.Logger] -登陆处理返回json对象:{"success":true,"token":"d575045d1700da5565dd6313fbd43281aea121311866ca24c027118da3ade2eb1bd01e326ad19a66882b033be4f0ea85"}
[ INFO] [2013-06-20 09:51:47]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:47]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:51:47]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:51:48]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:51:50]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:50]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in (
                        1,2,3,6,8
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -sql==
    SELECT
        id,
        NAME 'name',
        account AS account,
        pwd 'password',
        phone,
        email email,
        idcard idCard,
        sale_dep saleDept,
        capital_account capitalAccount,
        address,
        post postCode                     
    FROM
        user_info                     
    WHERE
        id=11
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:51:51]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:51:52]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:51:55]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:55]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 09:51:55]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 09:51:55]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 09:51:56]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 09:51:56]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 09:51:56]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 09:51:56]  [play.Logger] -

@6ek900kim
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Starting D:\www\iQuant\manage
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Module common is available (D:\www\iQuant\manage\..\common)
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Module excel is available (D:\www\iQuant\manage\modules\excel-1.2.3)
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Module qicdoc is available (D:\www\iQuant\manage\..\qicdoc)
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Module redis is available (D:\work\playframework\play1\modules\redis-0.3)
[ WARN] [2013-06-20 09:58:29]  [play.Logger] -You're running Play! in DEV mode
[ INFO] [2013-06-20 09:58:29]  [play.Logger] -Listening for HTTP on port 9100 (Waiting a first request to start) ...
[ INFO] [2013-06-20 09:58:46]  [play.Logger] -Starting D:\www\iQuant\manage
[ INFO] [2013-06-20 09:58:46]  [play.Logger] -Module common is available (D:\www\iQuant\manage\..\common)
[ INFO] [2013-06-20 09:58:46]  [play.Logger] -Module excel is available (D:\www\iQuant\manage\modules\excel-1.2.3)
[ INFO] [2013-06-20 09:58:46]  [play.Logger] -Module qicdoc is available (D:\www\iQuant\manage\..\qicdoc)
[ INFO] [2013-06-20 09:58:46]  [play.Logger] -Module redis is available (D:\work\playframework\play1\modules\redis-0.3)
[ WARN] [2013-06-20 09:58:47]  [play.Logger] -You're running Play! in DEV mode
[ INFO] [2013-06-20 09:58:47]  [play.Logger] -Listening for HTTP on port 9100 (Waiting a first request to start) ...
[ INFO] [2013-06-20 10:00:08]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qic_db?useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&connectionCollation=utf8_general_ci&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qicore?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qsm?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:00:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.annotations.common.Version] -HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.Version] -HHH000412: Hibernate Core {4.1.3.Final}
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.cfg.Environment] -HHH000206: hibernate.properties not found
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.cfg.Environment] -HHH000021: Bytecode provider name : javassist
[ INFO] [2013-06-20 10:00:10]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 10:00:10]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 10:00:11]  [play.Logger] -Application 'manage' is now started !
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:00:12]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:00:14]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:00:46]  [play.Logger] -Starting D:\www\iQuant\manage
[ INFO] [2013-06-20 10:00:46]  [play.Logger] -Module common is available (D:\www\iQuant\manage\..\common)
[ INFO] [2013-06-20 10:00:46]  [play.Logger] -Module excel is available (D:\www\iQuant\manage\modules\excel-1.2.3)
[ INFO] [2013-06-20 10:00:46]  [play.Logger] -Module qicdoc is available (D:\www\iQuant\manage\..\qicdoc)
[ INFO] [2013-06-20 10:00:46]  [play.Logger] -Module redis is available (D:\work\playframework\play1\modules\redis-0.3)
[ WARN] [2013-06-20 10:00:47]  [play.Logger] -You're running Play! in DEV mode
[ INFO] [2013-06-20 10:00:48]  [play.Logger] -Listening for HTTP on port 9100 (Waiting a first request to start) ...
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qic_db?useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&connectionCollation=utf8_general_ci&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qicore?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:08]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -Connected to jdbc:mysql://192.168.102.153/qsm?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:09]  [org.hibernate.annotations.common.Version] -HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
[ INFO] [2013-06-20 10:04:09]  [org.hibernate.Version] -HHH000412: Hibernate Core {4.1.3.Final}
[ INFO] [2013-06-20 10:04:09]  [org.hibernate.cfg.Environment] -HHH000206: hibernate.properties not found
[ INFO] [2013-06-20 10:04:09]  [org.hibernate.cfg.Environment] -HHH000021: Bytecode provider name : javassist
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:09]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:10]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 10:04:10]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 10:04:10]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 10:04:10]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 10:04:10]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -Application 'manage' is now started !
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==/* mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} ) */SELECT @@session.auto_increment_increment
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SHOW COLLATION
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET character_set_results = NULL
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET collation_connection = utf8_general_ci
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET sql_mode='STRICT_TRANS_TABLES'
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SELECT @@session.tx_isolation
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:04:11]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:12]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:12]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:04:12]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:04:14]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:29]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:29]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:04:29]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:04:29]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:30]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:30]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:04:30]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:04:30]  [play.Logger] -

@6ek91okgg
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:04:40]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:40]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:04:40]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:04:40]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:04:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:04:42]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:04:42]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:04:42]  [play.Logger] -

@6ek91okgh
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:09:34]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 10:09:34]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 10:09:34]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 10:09:34]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 10:09:34]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 10:09:34]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:35]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:38]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:38]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:09:38]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:38]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:39]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:39]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:09:39]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:09:39]  [play.Logger] -

@6ek91okgi
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:41]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:42]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:43]  [play.Logger] -sql==SET autocommit=1
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(194560,194560)] (with header Range: bytes=194560-194560)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(16384,16384)] (with header Range: bytes=16384-16384)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(4096,4096)] (with header Range: bytes=4096-4096)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(98304,98304)] (with header Range: bytes=98304-98304)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(16384,29985)] (with header Range: bytes=16384-29985)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(4096,42932)] (with header Range: bytes=4096-42932)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(98304,133799)] (with header Range: bytes=98304-133799)
[DEBUG] [2013-06-20 10:09:43]  [play.Logger] -Invoked ByteRangeServer, found byteRanges: [ByteRange(194560,275347)] (with header Range: bytes=194560-275347)
[ INFO] [2013-06-20 10:09:44]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:44]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:09:44]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:44]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:45]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:45]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:09:45]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:09:45]  [play.Logger] -

@6ek91okgj
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:56]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:58]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:58]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:09:58]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:09:58]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:09:59]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:09:59]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:09:59]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:09:59]  [play.Logger] -

@6ek91okgk
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:10:01]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:10:01]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:10:01]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:10:02]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:10:08]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:10:08]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:10:08]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:10:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:10:10]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:10:10]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:10:10]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:10:10]  [play.Logger] -

@6ek91okgl
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:05]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:06]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:07]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:09]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:09]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:11:09]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:10]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:10]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:11:10]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:11:10]  [play.Logger] -

@6ek91okgm
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:15]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:16]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:17]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:18]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:18]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:11:18]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:18]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:20]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:20]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:11:20]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:11:20]  [play.Logger] -

@6ek91okgn
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:21]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:24]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:24]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:11:24]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:11:24]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:11:25]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:11:25]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:11:25]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:11:25]  [play.Logger] -

@6ek91okgo
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:08]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:09]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:10]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:11]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:14]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:14]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:14:14]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:14]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:15]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:15]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:14:15]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:14:15]  [play.Logger] -

@6ek91okgp
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:14:16]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:16]  [play.Logger] -sql==
    SELECT
        qia.`sharp_ratio` AS sharpRatio,
        qia.`volatility` AS volatility,
        qia.`beta` AS beta,
        qia.`average_simple_rate_of_return` AS averageSimpleRateOfReturn,
        qia.`calmar_ratio` AS calmarRatio,
        qia.`conditional_sharp_ratio` AS conditionalSharpRatio,
        qia.`excess_return_on_var` AS excessReturnOnVar,
        qia.`highter_partial_moments` AS highterPartialMoments,
        qia.`jensen_ratio` AS jensenRatio,
        qia.`kappa3` AS kappa3,
        qia.`conditional_var` AS conditionalVar,
        qia.`lower_partial_moments` AS lowerPartialMoments,
        qia.`maximum_drawdown` AS maximumDrawdown,
        qia.`modified_sharp_ratio` AS modifiedSharpRatio,
        qia.`mvar` AS mvar,
        qia.`omega` AS omega,
        qia.`sortino_ratio` AS sortinoRatio,
        qia.`treynor_ratio` AS treynorRatio,
        qia.`upside_potential_ratio` AS upsidePotentialRatio,
        qia.`var` AS var,
        qia.`skewness` AS skewness,
        qia.`kurtosis` AS kurtosis,
        qia.`corr_with_market` AS corrWithMarket,
        qia.`hit_rate` AS hitRate,
        qia.`cumsum_simple_return` AS cumsumSimpleReturn,
        qia.`update_time` AS updateTime,
        qia.`strategy_id`                         
    FROM
        strategy_performance_qia qia                         
    WHERE
        qia.`strategy_id` = 271                           
        AND qia.`type` = 2                         
    ORDER BY
        qia.`update_time` DESC                         LIMIT 1
[ INFO] [2013-06-20 10:14:16]  [play.Logger] -sql==
    SELECT
        qia.`sharp_ratio` AS sharpRatio,
        qia.`volatility` AS volatility,
        qia.`beta` AS beta,
        qia.`average_simple_rate_of_return` AS averageSimpleRateOfReturn,
        qia.`calmar_ratio` AS calmarRatio,
        qia.`conditional_sharp_ratio` AS conditionalSharpRatio,
        qia.`excess_return_on_var` AS excessReturnOnVar,
        qia.`highter_partial_moments` AS highterPartialMoments,
        qia.`jensen_ratio` AS jensenRatio,
        qia.`kappa3` AS kappa3,
        qia.`conditional_var` AS conditionalVar,
        qia.`lower_partial_moments` AS lowerPartialMoments,
        qia.`maximum_drawdown` AS maximumDrawdown,
        qia.`modified_sharp_ratio` AS modifiedSharpRatio,
        qia.`mvar` AS mvar,
        qia.`omega` AS omega,
        qia.`sortino_ratio` AS sortinoRatio,
        qia.`treynor_ratio` AS treynorRatio,
        qia.`upside_potential_ratio` AS upsidePotentialRatio,
        qia.`var` AS var,
        qia.`skewness` AS skewness,
        qia.`kurtosis` AS kurtosis,
        qia.`corr_with_market` AS corrWithMarket,
        qia.`hit_rate` AS hitRate,
        qia.`cumsum_simple_return` AS cumsumSimpleReturn,
        qia.`update_time` AS updateTime,
        qia.`strategy_id`                         
    FROM
        strategy_performance_qia qia                         
    WHERE
        qia.`strategy_id` = 271                           
        AND qia.`type` = 1                         
    ORDER BY
        qia.`update_time` DESC                         LIMIT 1
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        up_time as upTime 
    FROM
        strategy_baseinfo   
    WHERE
        id = '271'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        * 
    FROM
        (SELECT
            DISTINCT     IF(       DAYOFWEEK (a.update_time) = '6',
            a.update_time,
            NULL     ) AS updatedate,
            IF(       DAYOFWEEK (a.update_time) = '6',
            a.yield,
            NULL     ) AS yield ,
            b. name as sname   
        FROM
            `strategy_yield` a      
        inner join
            qic_db.strategy_baseinfo b       
                ON a.Strategy_id = b.id   
        WHERE
            a.strategy_id = '271'   
            AND a.update_time>='2013-06-20 10:14:17'   
            AND a.update_time<='2013-06-20 10:14:17'   
            AND a.yield_type='1'   
        ORDER BY
            a.update_time ) f
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(yield) as minYield,
        MAX(yield) as maxYield 
    FROM
        (SELECT
            DISTINCT     IF(       DAYOFWEEK (a.update_time) = '6',
            a.yield,
            NULL     ) AS yield   
        FROM
            `strategy_yield` a   
        WHERE
            a.strategy_id = '271'   
            AND a.update_time>='2013-06-20 10:14:17'   
            AND a.update_time<='2013-06-20 10:14:17'   
        ORDER BY
            a.update_time ) f
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] --------------周线-------------------
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -minDate==========Thu Jun 20 10:14:17 CST 2013
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -strategys============{name:'--', data:[[Date.UTC(2012,01,01),0.00]]}
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -maxYield============0.0
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -str_maxDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -str_minDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] -str_preYield===============0.00
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        * 
    FROM
        (SELECT
            DISTINCT     IF(       DAYOFWEEK (a.update_time) = '6',
            a.update_time,
            NULL     ) AS updatedate,
            IF(       DAYOFWEEK (a.update_time) = '6',
            a.yield,
            NULL     ) AS yield ,
            b. name as sname   
        FROM
            `strategy_yield` a      
        inner join
            qic_db.strategy_baseinfo b       
                ON a.Strategy_id = b.id   
        WHERE
            a.strategy_id = '271'   
            AND a.update_time>='2013-06-20 10:14:17'   
            AND a.update_time<='2013-06-20 10:14:17'   
            AND a.yield_type='1'   
        ORDER BY
            a.update_time ) f
[ INFO] [2013-06-20 10:14:17]  [play.Logger] -sql==
    SELECT
        MIN(yield) as minYield,
        MAX(yield) as maxYield 
    FROM
        (SELECT
            DISTINCT     IF(       DAYOFWEEK (a.update_time) = '6',
            a.yield,
            NULL     ) AS yield   
        FROM
            `strategy_yield` a   
        WHERE
            a.strategy_id = '271'   
            AND a.update_time>='2013-06-20 10:14:17'   
            AND a.update_time<='2013-06-20 10:14:17'   
        ORDER BY
            a.update_time ) f
[DEBUG] [2013-06-20 10:14:17]  [play.Logger] --------------周线-------------------
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -minDate==========Thu Jun 20 10:14:17 CST 2013
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -strategys============{name:'--', data:[[Date.UTC(2012,01,01),0.00]]}
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -maxYield============0.0
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_maxDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_minDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_preYield===============0.00
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        a.yield as yield,
        a.update_time as updatedate,
        b.name as sname         
    FROM
        strategy_yield a           
    inner join
        qic_db.strategy_baseinfo b          
            ON a.Strategy_id = b.id         
    WHERE
        a.strategy_id = '271'           
        AND a.update_time >= DATE_FORMAT('2013-06-20 10:14:18', '%Y-%m-%d')           
        AND a.update_time <= DATE_FORMAT('2013-06-20 10:14:18', '%Y-%m-%d')           
        AND a.yield_type='1'         
    ORDER BY
        a.update_time
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(yield) as minYield,
        MAX(yield) as maxYield     
    FROM
        strategy_yield     
    WHERE
        strategy_id = '271'         
        AND update_time >= '2013-06-20 10:14:18'         
        AND update_time <= '2013-06-20 10:14:18'
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] --------------日线-------------------
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -strategys============{name:'--', data:[[Date.UTC(2012,01,01),0.00]]}
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -maxYield============0.0
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_maxDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_minDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_preYield===============0.00
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate     
    FROM
        qic_db.strategy_yield     
    WHERE
        strategy_id = '271'     
        AND run_type = '1'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(update_time) AS minDate,
        MAX(update_time) AS maxDate       
    FROM
        qic_db.strategy_yield       
    WHERE
        strategy_id = '271'         
        AND run_type = '2'
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        a.yield as yield,
        a.update_time as updatedate,
        b.name as sname         
    FROM
        strategy_yield a           
    inner join
        qic_db.strategy_baseinfo b          
            ON a.Strategy_id = b.id         
    WHERE
        a.strategy_id = '271'           
        AND a.update_time >= DATE_FORMAT('2013-06-20 10:14:18', '%Y-%m-%d')           
        AND a.update_time <= DATE_FORMAT('2013-06-20 10:14:18', '%Y-%m-%d')           
        AND a.yield_type='1'         
    ORDER BY
        a.update_time
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==
    SELECT
        MIN(yield) as minYield,
        MAX(yield) as maxYield     
    FROM
        strategy_yield     
    WHERE
        strategy_id = '271'         
        AND update_time >= '2013-06-20 10:14:18'         
        AND update_time <= '2013-06-20 10:14:18'
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] --------------日线-------------------
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -strategys============{name:'--', data:[[Date.UTC(2012,01,01),0.00]]}
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -maxYield============0.0
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_maxDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_minDate============Date.UTC(2013,5,20)
[DEBUG] [2013-06-20 10:14:18]  [play.Logger] -str_preYield===============0.00
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:18]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:20]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:20]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:14:20]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:14:20]  [play.Logger] -

@6ek91okh0
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:35]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:46]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:46]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:14:46]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:14:46]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:14:52]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:14:52]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:14:52]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:14:52]  [play.Logger] -

@6ek91okh1
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:19:47]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:19:52]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:19:52]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:19:52]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:19:52]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:19:53]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:19:53]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:19:53]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:19:53]  [play.Logger] -

@6ek91okh2
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=271&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [271]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [271]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:20:03]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:20:05]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:20:05]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=269
[ INFO] [2013-06-20 10:20:05]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:20:05]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:20:06]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:20:06]  [play.Logger] -sql==rollback
[ INFO] [2013-06-20 10:20:06]  [play.Logger] -sql==SET autocommit=1
[ERROR] [2013-06-20 10:20:06]  [play.Logger] -

@6ek91okh3
Internal Server Error (500) for request GET /strategyinfos/holdposition?id=269&enginetypeId=2

Database error (In {module:common}/app/dbutils/QicDbUtil.java around line 126)
A database error occured : Wrong number of parameters: expected 2, was given 1 Query: select count(*) from ( SELECT           b.`update_time` AS updatetime,           a.`name` AS NAME,           b.`security_id` AS securityid,           b.`security_exchange` AS securityexchange,           b.`positions` AS positions,           a.`trade_variety` AS trade_variety         FROM           strategy_baseinfo a           INNER JOIN strategy_position b             ON a.`id` = b.`strategy_id`         WHERE a.`id` = ?           AND b.`update_time` >= DATE_ADD(             (SELECT               MAX(update_time)             FROM               strategy_position WHERE strategy_id = ?),             INTERVAL - 0 DAY           )         ORDER BY b.`update_time` DESC ) distTable    Parameters: [269]

play.exceptions.DatabaseException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [269]
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:128)
	at business.StrategyBaseService.getQiaPosition(StrategyBaseService.java:204)
	at controllers.StrategyInfos.holdPosition(StrategyInfos.java:291)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:557)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:508)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:484)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:479)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:161)
	at Invocation.HTTP Request(Play!)
Caused by: java.sql.SQLException: Wrong number of parameters: expected 2, was given 1 Query: select count(*) from (
SELECT
          b.`update_time` AS updatetime,
          a.`name` AS NAME,
          b.`security_id` AS securityid,
          b.`security_exchange` AS securityexchange,
          b.`positions` AS positions,
          a.`trade_variety` AS trade_variety
        FROM
          strategy_baseinfo a
          INNER JOIN strategy_position b
            ON a.`id` = b.`strategy_id`
        WHERE a.`id` = ?
          AND b.`update_time` >= DATE_ADD(
            (SELECT
              MAX(update_time)
            FROM
              strategy_position WHERE strategy_id = ?),
            INTERVAL - 0 DAY
          )
        ORDER BY b.`update_time` DESC
) distTable  
 Parameters: [269]
	at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:363)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:350)
	at org.apache.commons.dbutils.QueryRunner.query(QueryRunner.java:211)
	at dbutils.QicDbUtil.queryQicDbCount(QicDbUtil.java:126)
	... 8 more
[ INFO] [2013-06-20 10:25:11]  [play.Logger] -Connecting to redis with redis://localhost:6379
[ INFO] [2013-06-20 10:25:11]  [org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator] -HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
[ INFO] [2013-06-20 10:25:11]  [org.hibernate.dialect.Dialect] -HHH000400: Using dialect: play.db.jpa.MySQLDialect
[ INFO] [2013-06-20 10:25:11]  [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] -HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[ INFO] [2013-06-20 10:25:11]  [org.hibernate.engine.transaction.internal.TransactionFactoryInitiator] -HHH000399: Using default transaction strategy (direct JDBC transactions)
[ INFO] [2013-06-20 10:25:11]  [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] -HHH000397: Using ASTQueryTranslatorFactory
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -loading sql from  module[common]
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            c.nowOrder AS subscriber,
            MAX(uso.`order_etime`) AS endDate,
            sb.order_count AS allSubscriber,
            IF(                             sb.enginetype_id = 1,
            shl.yield_of_year,
            qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
            /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
            shl.profit_ratio,
            qia.hit_rate                         ) AS profitRatio,
            /*胜率*/                          IF(                             sb.enginetype_id = 1,
            shl.sharpe_index,
            qia.sharp_ratio                         ) AS sharpeIndex,
            /*夏普比率*/                        IF(                         sb.discuss_count = 0,
            0,
            sb.discuss_total / sb.discuss_count                       ) AS starLevel,
            /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
        FROM
            qic_db.strategy_baseinfo sb                           
        LEFT JOIN
            user_strategy_order uso                             
                ON sb.`id` = uso.`stid`                           
        LEFT JOIN
            (
                SELECT
                    COUNT(1) AS nowOrder,
                    a.`stid` AS stid                             
                FROM
                    qic_db.user_strategy_order a                               
                INNER JOIN
                    qic_db.strategy_baseinfo b                                 
                        ON a.`stid` = b.`id`                             
                WHERE
                    a.`order_etime` > NOW()                             
                GROUP BY
                    b.`id`
            ) c                             
                ON sb.`id` = c.stid                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                             
                    ON shl.`strategy_id` = sb.id                           
            LEFT JOIN
                (
                    SELECT
                        a.*                             
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                               
                        FROM
                            qic_db.strategy_performance_qia b                               
                        GROUP BY
                            b.strategy_id) bm                             
                    WHERE
                        a.strategy_id = bm.strategy_id                               
                        AND a.update_time = bm.update_time
                    ) AS qia                             
                        ON sb.id = qia.strategy_id                 
                WHERE
                    1 = 1 
                    and status in (
                        4,7
                    ) 
                    and sb.stup_uid in(
                        11,-1000
                    )  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        c.nowOrder AS subscriber,
        MAX(uso.`order_etime`) AS endDate,
        sb.order_count AS allSubscriber,
        IF(                             sb.enginetype_id = 1,
        shl.yield_of_year,
        qia.average_simple_rate_of_return * 252                         ) AS yieldOfYear,
        /*年化收益率*/                        IF(                             sb.enginetype_id = 1,
        shl.profit_ratio,
        qia.hit_rate                         ) AS profitRatio,
        /*胜率*/                          IF(                             sb.enginetype_id = 1,
        shl.sharpe_index,
        qia.sharp_ratio                         ) AS sharpeIndex,
        /*夏普比率*/                        IF(                         sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count                       ) AS starLevel,
        /*星级*/                       sb.discuss_count AS discussCount                       /*评论总数*/             
    FROM
        qic_db.strategy_baseinfo sb                           
    LEFT JOIN
        user_strategy_order uso                             
            ON sb.`id` = uso.`stid`                           
    LEFT JOIN
        (
            SELECT
                COUNT(1) AS nowOrder,
                a.`stid` AS stid                             
            FROM
                qic_db.user_strategy_order a                               
            INNER JOIN
                qic_db.strategy_baseinfo b                                 
                    ON a.`stid` = b.`id`                             
            WHERE
                a.`order_etime` > NOW()                             
            GROUP BY
                b.`id`
        ) c                             
            ON sb.`id` = c.stid                           
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                             
                ON shl.`strategy_id` = sb.id                           
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qia b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS qia                             
                    ON sb.id = qia.strategy_id                 
            WHERE
                1 = 1 
                and status in (
                    4,7
                ) 
                and sb.stup_uid in(
                    11,-1000
                )  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -miss 用户-->角色
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==
    SELECT
        ri.id,
        rid,
        ur.uid uid                     
    FROM
        user_role  ur                     
    LEFT JOIN
        role_info ri                     
            ON                             ur.rid=ri.id                     
    WHERE
        ur.uid=11
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -miss 角色-->权限
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==
    SELECT
        fi.id AS id,
        fi.name,
        fi.pid,
        fi.pid fpid                     
    FROM
        role_function rf                      
    LEFT JOIN
        function_info fi                     
            ON                           rf.fid=fi.id                     
    WHERE
        rf.rid=1
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:12]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:13]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:13]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=269
[ INFO] [2013-06-20 10:25:13]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:13]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:14]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:14]  [play.Logger] -sql==
    SELECT
        b.`update_time` AS updatetime,
        a.`name` AS NAME,
        b.`security_id` AS securityid,
        b.`security_exchange` AS securityexchange,
        b.`positions` AS positions,
        a.`trade_variety` AS trade_variety         
    FROM
        strategy_baseinfo a           
    INNER JOIN
        strategy_position b             
            ON a.`id` = b.`strategy_id`         
    WHERE
        a.`id` = 269           
        AND b.`update_time` >= DATE_ADD(             (SELECT
            MAX(update_time)             
        FROM
            strategy_position 
        WHERE
            strategy_id = 269),             INTERVAL - 0 DAY           )         
    ORDER BY
        b.`update_time` DESC
[ INFO] [2013-06-20 10:25:15]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:15]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:17]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:17]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=270
[ INFO] [2013-06-20 10:25:17]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:17]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:18]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:18]  [play.Logger] -sql==
    SELECT
        b.`update_time` AS updatetime,
        a.`name` AS NAME,
        b.`security_id` AS securityid,
        b.`security_exchange` AS securityexchange,
        b.`positions` AS positions,
        a.`trade_variety` AS trade_variety         
    FROM
        strategy_baseinfo a           
    INNER JOIN
        strategy_position b             
            ON a.`id` = b.`strategy_id`         
    WHERE
        a.`id` = 270           
        AND b.`update_time` >= DATE_ADD(             (SELECT
            MAX(update_time)             
        FROM
            strategy_position 
        WHERE
            strategy_id = 270),             INTERVAL - 0 DAY           )         
    ORDER BY
        b.`update_time` DESC
[ INFO] [2013-06-20 10:25:18]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:18]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -sql==
    select
        count(*) 
    from
        ( SELECT
            sb.id AS id,
            sb.`status` AS STATUS,
            sb.name AS sname,
            sb.provider AS provider,
            sb.trade_variety AS tradeVariety,
            sb.trade_type AS stype,
            sb.collect_count AS collectCount,
            sb.enginetype_id enginetypeId,
            sb.up_time upTime,
            sb.upload_time uploadTime,
            sb.del_time delTime,
            sb.order_count AS allSubscriber,
            shl.`Retained_Profits` AS retainedProfits,
            shl.`Yield` AS yield,
            IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.yield_of_year,
            0),
            IFNULL(qia.average_simple_rate_of_return * 252,
            0)                                     ) AS yieldOfYear,
            /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.profit_ratio,
            0),
            IFNULL(qia.hit_rate,
            0)                                     ) AS profitRatio,
            /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
            IFNULL(shl.sharpe_index,
            0),
            IFNULL(qia.sharp_ratio,
            0)                                     ) AS sharpeIndex /*夏普比率*/                      
        FROM
            qic_db.strategy_baseinfo sb                     
        LEFT JOIN
            (
                SELECT
                    a.*                             
                FROM
                    strategy_performance_qicore a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                               
                    FROM
                        qic_db.strategy_performance_qicore b                               
                    GROUP BY
                        b.strategy_id) bm                             
                WHERE
                    a.strategy_id = bm.strategy_id                               
                    AND a.update_time = bm.update_time
                ) AS shl                     
                    ON shl.`strategy_id` = sb.id                     
            LEFT JOIN
                (
                    SELECT
                        a.*                                 
                    FROM
                        qic_db.strategy_performance_qia a,
                        (SELECT
                            b.strategy_id,
                            MAX(b.update_time) AS update_time                                 
                        FROM
                            qic_db.strategy_performance_qia b                                 
                        GROUP BY
                            b.strategy_id) bm                                 
                    WHERE
                        a.strategy_id = bm.strategy_id                                 
                        AND a.update_time = bm.update_time
                    ) AS qia                                 
                        ON sb.id = qia.strategy_id                     
                WHERE
                    1 = 1 
                    and status in(
                        5,-100
                    ) 
                    and sb.stup_uid=11  
                GROUP BY
                    id  
            ) distTable
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -sql==
    SELECT
        sb.id AS id,
        sb.`status` AS STATUS,
        sb.name AS sname,
        sb.provider AS provider,
        sb.trade_variety AS tradeVariety,
        sb.trade_type AS stype,
        sb.collect_count AS collectCount,
        sb.enginetype_id enginetypeId,
        sb.up_time upTime,
        sb.upload_time uploadTime,
        sb.del_time delTime,
        sb.order_count AS allSubscriber,
        shl.`Retained_Profits` AS retainedProfits,
        shl.`Yield` AS yield,
        IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.yield_of_year,
        0),
        IFNULL(qia.average_simple_rate_of_return * 252,
        0)                                     ) AS yieldOfYear,
        /*年化收益率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.profit_ratio,
        0),
        IFNULL(qia.hit_rate,
        0)                                     ) AS profitRatio,
        /*胜率*/                                      IF(                                     sb.enginetype_id = 1,
        IFNULL(shl.sharpe_index,
        0),
        IFNULL(qia.sharp_ratio,
        0)                                     ) AS sharpeIndex /*夏普比率*/                      
    FROM
        qic_db.strategy_baseinfo sb                     
    LEFT JOIN
        (
            SELECT
                a.*                             
            FROM
                strategy_performance_qicore a,
                (SELECT
                    b.strategy_id,
                    MAX(b.update_time) AS update_time                               
                FROM
                    qic_db.strategy_performance_qicore b                               
                GROUP BY
                    b.strategy_id) bm                             
            WHERE
                a.strategy_id = bm.strategy_id                               
                AND a.update_time = bm.update_time
            ) AS shl                     
                ON shl.`strategy_id` = sb.id                     
        LEFT JOIN
            (
                SELECT
                    a.*                                 
                FROM
                    qic_db.strategy_performance_qia a,
                    (SELECT
                        b.strategy_id,
                        MAX(b.update_time) AS update_time                                 
                    FROM
                        qic_db.strategy_performance_qia b                                 
                    GROUP BY
                        b.strategy_id) bm                                 
                WHERE
                    a.strategy_id = bm.strategy_id                                 
                    AND a.update_time = bm.update_time
                ) AS qia                                 
                    ON sb.id = qia.strategy_id                     
            WHERE
                1 = 1 
                and status in(
                    5,-100
                ) 
                and sb.stup_uid=11  
            GROUP BY
                id  limit 0,
                20
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 用户-->角色
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -hit 角色-->权限
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:20]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:22]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:22]  [play.Logger] -sql==
    SELECT
        id,
        st_uuid as stUuid,
        name,
        desp,
        trade_type as tradeType,
        trade_variety as tradeVariety,
        up_time as upTime,
        down_time as downTime,
        provider,
        provider_desp as providerDesp,
        lookback_stime as lookbackStime,
        lookback_etime as lookbackEtime,
        status,
        discuss_total as discussTotal,
        discuss_count as discussCount,
        collect_count as collectCount,
        order_count as orderCount,
        enginetype_id as enginetypeId             
    FROM
        strategy_baseinfo             
    WHERE
        id=271
[ INFO] [2013-06-20 10:25:22]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:22]  [play.Logger] -sql==SET autocommit=1
[ INFO] [2013-06-20 10:25:23]  [play.Logger] -sql==SET autocommit=0
[ INFO] [2013-06-20 10:25:23]  [play.Logger] -sql==
    SELECT
        b.`update_time` AS updatetime,
        a.`name` AS NAME,
        b.`security_id` AS securityid,
        b.`security_exchange` AS securityexchange,
        b.`positions` AS positions,
        a.`trade_variety` AS trade_variety         
    FROM
        strategy_baseinfo a           
    INNER JOIN
        strategy_position b             
            ON a.`id` = b.`strategy_id`         
    WHERE
        a.`id` = 271           
        AND b.`update_time` >= DATE_ADD(             (SELECT
            MAX(update_time)             
        FROM
            strategy_position 
        WHERE
            strategy_id = 271),             INTERVAL - 0 DAY           )         
    ORDER BY
        b.`update_time` DESC
[ INFO] [2013-06-20 10:25:23]  [play.Logger] -sql==commit
[ INFO] [2013-06-20 10:25:23]  [play.Logger] -sql==SET autocommit=1
